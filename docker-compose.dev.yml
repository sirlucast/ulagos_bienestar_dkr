version: "3.7"

services:
  postgresdb: # DB PostreSQL
    container_name: postgresdb
    image: postgres:12.0-alpine
    volumes:
      - vol_postgresdb:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - main
    restart: "always"
  backend: # Backend DJango REST API
    container_name: backend
    build:
      context: ./backend
      args:
        - POETRY_VERSION=${POETRY_VERSION}
        - DDT_SRC_DIR=${DDT_ROOT}
    env_file:
      - .env
    entrypoint:
      - sh
      - ${DDT_ROOT}/start.sh
    # command: python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/${DDT_ROOT}/
      - vol_static:${DDT_ROOT}/static
      - vol_media:${DDT_ROOT}/media
      - vol_logs:${DDT_ROOT}/logs
    ports:
      - "8000:8000"
    depends_on:
      - postgresdb
    networks:
      - main
    restart: "always"
  # frontend: # Frontend VueJS
  #   container_name: frontend
  #   build:
  #     context: ./frontend
  #   volumes:
  #     - ./frontend:/app/frontend
  #     - '/app/node_modules'
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - main
  #   depends_on:
  #     - backend
  #     - postgresdb
  #   environment:
  #     - NODE_ENV=development
  #   restart: 'always'
  nginx: # Contenedor nginx (reverse proxy)
    container_name: nginx
    image: nginx:alpine
    build:
      context: .
      dockerfile: nginx/dev/Dockerfile
      args:
        - DDT_SRC_DIR=${DDT_ROOT}
    env_file:
      - .env
    ports:
      - "80:80"
    depends_on:
      - backend
      # - frontend
    volumes:
      - ./nginx/dev/dev.conf:/etc/nginx/nginx.conf:ro
      - vol_static:${DDT_ROOT}/static
      - vol_media:${DDT_ROOT}/media
    networks:
      - main
    restart: "always"

volumes:
  vol_postgresdb:
  vol_static:
    # driver: local
    driver_opts:
      type: none
      device: ${PWD}/vol/static
      o: bind
  vol_media:
    # driver: local
    driver_opts:
      type: none
      device: ${PWD}/vol/media
      o: bind
  vol_logs:
    # driver: local
    driver_opts:
      type: none
      device: ${PWD}/vol/logs
      o: bind

networks:
  main:
    driver: bridge
